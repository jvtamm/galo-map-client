import React from 'react';
import { DivIconOptions } from 'leaflet';
import ReactDOMServer from 'react-dom/server';

export interface MarkerProps {
    fillColor?: string;
    color?: string;
    strokeColor?: string;
}

const StadiumMarker: React.FC<MarkerProps> = ({ color, fillColor }) => {
    const bgColor = fillColor || 'white';
    const iconColor = color || '#172426';

    return (
        <svg width={72} height={72} viewBox="0 0 72 72" fill="none">

            <circle
                cx={36}
                cy={36}
                r={21.622}
                fill={bgColor}
                vectorEffect="non-scaling-stroke"
                strokeWidth={1}
                stroke="#000"
                paintOrder="fill"
                filter="url(#prefix__a)"
            />
            <path
                d="M45.565 30.778v-.034h-.176l-.005 1.393a7.127 7.127 0 00-1.359-.864c-1.183-.59-2.472-.947-3.78-1.168l.004-.662c.639-.553 1.213.255 1.637-.543-.997.014-.777-.596-1.636-.546l.001-.033h-.177l-.004 1.754a21.833 21.833 0 00-6.328-.068c-.162.022-.328.05-.491.075l-.006-1.761h-.177v.033c-.857-.05-.638.56-1.636.546.426.798 1-.01 1.64.543l.003.668c-1.475.251-2.951.671-4.242 1.422a6.486 6.486 0 00-.897.625l-.004-1.414h-.178v.034c-.856-.053-.639.558-1.634.543.422.798.997-.01 1.64.543l.001.445c-.627.571-1.111 1.301-1.071 2.152.047.99.625 1.759 1.365 2.348v1.413a3.125 3.125 0 01-.631-.711 2.292 2.292 0 01-.178-.353 2.467 2.467 0 01-.09-.284 1.354 1.354 0 01-.033-.184l-.009-.063-.005.063a2.02 2.02 0 00.16.902c.06.149.144.304.251.466a3.64 3.64 0 00.535.633v1.284a3.032 3.032 0 01-.631-.707 2.449 2.449 0 01-.178-.355 1.943 1.943 0 01-.123-.468l-.009-.063-.006.063a2.038 2.038 0 00.161.904c.06.147.144.304.251.463a4.1 4.1 0 00.535.637l.036.034c.277.259.605.509.979.74.229.144.476.28.739.409.262.128.54.249.826.362.576.225 1.2.419 1.855.57.327.077.664.145 1.004.202l.051.007.096.324.206-.059.204-.063-.728-2.431a13.253 13.253 0 016.672 0l-.727 2.431.205.063.205.059.098-.324.05-.007c.339-.057.676-.125 1.003-.202a13.333 13.333 0 001.855-.57c.288-.113.566-.232.827-.362a8.8 8.8 0 00.741-.409c.374-.231.702-.481.978-.74l.036-.034c.051-.051.099-.1.146-.15.307-.324.519-.656.64-.95.124-.295.156-.548.162-.711.003-.086 0-.15-.004-.191-.002-.043-.005-.065-.005-.065l-.007.063a2.554 2.554 0 01-.033.185 2.296 2.296 0 01-.27.635 2.75 2.75 0 01-.297.391 3.503 3.503 0 01-.332.319v-1.284c.051-.049.099-.098.146-.146.307-.323.519-.656.64-.953.124-.295.156-.545.162-.712a1.5 1.5 0 00-.009-.253l-.007.063a2.547 2.547 0 01-.033.184c-.019.08-.051.174-.089.284-.045.11-.103.228-.181.353a2.795 2.795 0 01-.297.389 3.939 3.939 0 01-.332.322v-1.395c.748-.592 1.327-1.368 1.384-2.368-.005-.881-.462-1.6-1.089-2.17l.001-.425c.64-.553 1.213.255 1.639-.543-.997.015-.778-.596-1.636-.543zm-5.238.203c.843.16 1.671.386 2.468.696.71.276 1.583.677 2.199 1.263l-3.382 2.101c-.671-.517-1.745-.92-3.034-1.121l1.749-2.939zm-2.542-.299c.67.037 1.344.105 2.012.208l-1.761 2.96c-.44-.051-.901-.076-1.375-.076-.476 0-.936.025-1.379.076l-1.76-2.96a20.342 20.342 0 014.263-.208zm-8.843 1.78c1.203-.795 2.641-1.218 4.052-1.481l1.747 2.939c-1.288.201-2.363.604-3.033 1.121l-3.384-2.103c.192-.176.404-.336.618-.476zm1.497 8.767a10.275 10.275 0 01-1.122-.453 8.25 8.25 0 01-.64-.349c-.041-.028-.082-.05-.121-.078v-1.231a8.287 8.287 0 001.253.76c.202.097.412.192.63.281v1.07zm0-1.755a9.707 9.707 0 01-1.122-.456 6.22 6.22 0 01-.761-.425v-1.427c.175.115.355.219.534.316.436.236.886.431 1.349.602v1.39zm-.444-2.506c-.7-.319-1.405-.719-1.92-1.304-.25-.283-.61-.815-.536-1.23.036-.201.093-.541.222-.798a2.22 2.22 0 01.215-.324l3.352 2.082c-.236.276-.368.574-.368.887 0 .492.324.948.876 1.336a11.39 11.39 0 01-1.841-.649zm2.657 4.826c-.6-.11-1.175-.242-1.711-.405v-1.037a14.227 14.227 0 002.045.564l.293.981c-.211-.031-.42-.067-.627-.103zm9.726-.405a15.6 15.6 0 01-1.711.405c-.206.036-.417.072-.627.103l.293-.981a14.161 14.161 0 002.045-.564v1.037zm0-1.754c-.537.159-1.111.296-1.711.403-.182.033-.369.065-.558.092-2.318-.59-4.58-.59-6.899 0a17.528 17.528 0 01-.558-.092 15.78 15.78 0 01-1.711-.403v-1.377c1.018.327 2.084.53 3.132.658 1.738.212 3.512.209 5.249-.005 1.029-.129 2.063-.328 3.056-.647v1.371zm2.386.714l-.122.078a7.848 7.848 0 01-.638.349c-.344.164-.72.316-1.123.453v-1.07a9.096 9.096 0 001.371-.691c.181-.112.352-.229.512-.35v1.231zm0-1.756c-.042.027-.079.051-.122.076a5.983 5.983 0 01-.638.349c-.344.167-.72.319-1.123.456v-1.382c.424-.156.839-.335 1.24-.54a7.78 7.78 0 00.643-.369v1.41zm.998-4.162c-.008.765-.694 1.487-1.363 1.933-.87.584-1.871.972-2.897 1.24.544-.382.857-.837.857-1.323 0-.313-.129-.611-.367-.887l3.342-2.075c.24.321.399.691.428 1.112z"
                fill={iconColor}
            />
            <defs>
                <filter
                    id="prefix__a"
                    x="-500%"
                    y="-500%"
                    width="1000%"
                    height="1000%"
                >
                    <feGaussianBlur in="SourceAlpha" stdDeviation={4} />
                    <feOffset dy={4} />
                    <feComponentTransfer result="offsetblur">
                        <feFuncA type="linear" slope={0.6} />
                    </feComponentTransfer>
                    <feFlood floodColor="rgba(0,0,0,0.60)" />
                    <feComposite in2="offsetblur" operator="in" />
                    <feMerge>
                        <feMergeNode />
                        <feMergeNode in="SourceGraphic" />
                    </feMerge>
                </filter>
            </defs>
        </svg >
    );
};

const Marker: React.FC<MarkerProps> = ({ color, fillColor }) => {
    const primaryColor = fillColor || '#172426';
    const secondaryColor = color || '#ffffff';

    return (
        <svg viewBox="0 0 10 10">
            <circle
                cx={5}
                cy={5}
                r={4}
                style={{ strokeWidth: '0.5px' }}
                paintOrder="fill"
                fill={secondaryColor}
                stroke={primaryColor}
            />
            <circle cx={5} cy={5} r={3} />
        </svg>
    );
};

export const generateMarker = (type?: string, props?: MarkerProps): DivIconOptions => {
    switch (type) {
        case 'stadium':
            return {
                html: ReactDOMServer.renderToString(<StadiumMarker {...props} />),
                iconSize: [72, 72]
            };
        default:
            return {
                html: ReactDOMServer.renderToString(<Marker {...props} />),
                iconSize: [10, 10]
            };
    }
};
